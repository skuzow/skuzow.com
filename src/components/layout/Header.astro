---
import { Image } from 'astro:assets';
import { Linkedin, Github } from 'lucide-vue-next';

import Link from '@/components/common/Link.astro';
import { Button } from '@/components/ui/button';
import ThemeToggle from '@/components/layout/ThemeToggle.vue';
---

<header
  transition:persist
  class="bg-header sticky top-0 z-10 py-4 backdrop-blur-md"
>
  <nav class="container flex max-w-4xl flex-1 justify-between">
    <Link
      id="scroll-top"
      href="/"
      title="skuzow.com"
      newTab={false}
      styled={false}
      class="flex items-center gap-2.5"
    >
      <Image
        src="/logo.avif"
        alt="logo"
        title="logo"
        width="34"
        height="34"
        loading="eager"
        class="rounded-md"
      />
      <span class="font-mono hover:underline">skuzow.com</span>
    </Link>

    <div class="flex items-center gap-1">
      <Link
        href="https://www.linkedin.com/in/alejandro-porras-torrecilla"
        title="LinkedIn"
        styled={false}
      >
        <Button variant="ghost" size="icon">
          <Linkedin size={18} />
          <span class="sr-only">Linkedin</span>
        </Button>
      </Link>

      <Link href="https://github.com/skuzow" title="Github" styled={false}>
        <Button variant="ghost" size="icon">
          <Github size={18} />
          <span class="sr-only">Github</span>
        </Button>
      </Link>

      <ThemeToggle client:load />
    </div>
  </nav>
</header>

<script>
  const scrollTop = document.getElementById('scroll-top')!;

  scrollTop.addEventListener('click', (event) => {
    event.preventDefault();

    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  });
</script>

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }

    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light';
  };

  const isDark = getThemePreference() === 'dark';
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });

    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class']
    });
  }
</script>
